@using Markdig
@model Opw.PineBlog.Entities.Post
@{
    // Configure the pipeline with advanced extensions activated
    var pipeline = new MarkdownPipelineBuilder()
        .UseEmphasisExtras()
        .UseGenericAttributes()
        .UseMediaLinks()
        .UsePipeTables()
        .Build();
}
<article class="post">
    <h2 class="post-title"><a asp-page="Post" asp-route-slug="@Model.Slug">@Model.Title</a></h2>
    <div class="post-meta">
        <img class="post-meta-img" src="~/@Model.Author.Avatar" alt="@Model.Author.DisplayName" />
        <span class="post-meta-author">@Model.Author.DisplayName</span>
        @if (Model.Published.HasValue)
        {
            <time class="post-meta-time" datetime="@Model.Published.Value.ToUtc()">@Model.Published.Value.ToFriendlyDateString()</time>
        }
        @if (!string.IsNullOrEmpty(Model.Categories))
        {
            <span>/</span>
            var cats = Model.Categories.Split(',');
            foreach (var cat in cats)
            {
                <span>
                    <a asp-page="Index" asp-route-category="@cat">@cat</a>
                </span>
            }
        }
    </div>
    <div class="post-content">
        @Html.Raw(Markdig.Markdown.ToHtml(Model.Content, pipeline))
    </div>
</article>